<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog/1.9"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog/1.9
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd">

    <changeSet id="add procedure UPDATE_TEST_RESULT_WITH_FINAL_RESULT_ID_AND_FAIL_REASON" author="e.safronov">
        <sql endDelimiter="#">
            DROP procedure IF EXISTS `UPDATE_TEST_RESULT_WITH_FINAL_RESULT_ID_AND_FAIL_REASON`;

            #

            CREATE PROCEDURE `UPDATE_TEST_RESULT_WITH_FINAL_RESULT_ID_AND_FAIL_REASON`(
                IN request_id VARCHAR(11),
                IN request_final_result_id VARCHAR(11),
                IN request_fail_reason mediumtext,
                IN request_finish_date VARCHAR(500)
            )
            BEGIN
                UPDATE test_results
                SET
                    finish_date = If(request_finish_date = '', finish_date, FROM_UNIXTIME(request_finish_date)),
                    final_result_updated = IF(request_final_result_id != final_result_id, NOW(), final_result_updated),
                    fail_reason = IF(
                        request_fail_reason = '',
                        fail_reason,
                        IF(request_fail_reason = '$blank', '', request_fail_reason)
                    ),
                    final_result_id = request_final_result_id,
                    updated = NOW()
                WHERE id = request_id;

                SELECT * FROM test_results WHERE id = request_id;
            END
        </sql>
        <rollback>
        </rollback>
    </changeSet>
      <changeSet id="add index to tests name column" author="e.safronov">
        <createIndex tableName="tests" indexName="name_idx">
            <column name="name"/>
        </createIndex>
    </changeSet>
    <changeSet id="INSERT_TEST_RESULT fix final_result_id comparison" author="e.safronov">
        <sql endDelimiter="#">

            DROP PROCEDURE IF EXISTS `INSERT_TEST_RESULT`;

            #
            CREATE PROCEDURE `INSERT_TEST_RESULT`(
                IN request_project_id VARCHAR(10),
                IN request_id VARCHAR(10),
                IN request_test_id VARCHAR(500),
                IN request_final_result_id VARCHAR(500),
                IN request_test_run_id VARCHAR(500),
                IN request_log longtext,
                IN request_debug VARCHAR(1),
                IN request_finish_date VARCHAR(500),
                IN request_start_date VARCHAR(500),
                IN request_final_result_updated VARCHAR(500),
                IN request_fail_reason mediumtext,
                IN request_issue_id VARCHAR(11)
            )
            BEGIN
            INSERT INTO test_results (
                project_id, id, test_id, final_result_id, test_run_id, log, debug, start_date,
                finish_date, final_result_updated, fail_reason, issue_id
            )
            VALUES (
                request_project_id,
                IF(request_id='', null, request_id),
                request_test_id,
                IF(request_final_result_id='',1,request_final_result_id),
                IF(request_test_run_id = '', null, request_test_run_id),
                IF(request_log = '', null, request_log),
                IF(request_debug = '', 0, request_debug),
                If(request_start_date = '', null, FROM_UNIXTIME(request_start_date)),
                If(request_finish_date = '', null, FROM_UNIXTIME(request_finish_date)),
                NOW(),
                IF(request_fail_reason = '', null, request_fail_reason),
                replace_empty(request_issue_id, null)
            )
            ON DUPLICATE KEY UPDATE
                test_id=IF(request_test_id = '',test_id,request_test_id),
                log = IF(request_log = '', log, IF(request_log = '$blank', '', request_log)),
                debug = IF(request_debug = '', debug, request_debug),
                start_date = If(request_start_date = '', start_date, FROM_UNIXTIME(request_start_date)),
                finish_date = If(request_finish_date = '', finish_date, FROM_UNIXTIME(request_finish_date)),
                final_result_updated = IF(
                    request_final_result_id != final_result_id AND request_final_result_updated = '',
                    NOW(),
                    IF(
                        request_final_result_updated = '',
                        final_result_updated,
                        FROM_UNIXTIME(request_final_result_updated)
                    )
                ),
                fail_reason = IF(
                    request_fail_reason = '',
                    fail_reason,
                    IF(request_fail_reason = '$blank', '', request_fail_reason)
                ),
                final_result_id = IF(request_final_result_id = '', final_result_id, request_final_result_id),
                issue_id = apply_or_remove_id(request_issue_id, issue_id);

            SET @insert_id = IF(request_id = '', (SELECT LAST_INSERT_ID()), request_id);

            SELECT * FROM test_results WHERE id = @insert_id;
            END
        </sql>
        <rollback>
        </rollback>
    </changeSet>
</databaseChangeLog>
